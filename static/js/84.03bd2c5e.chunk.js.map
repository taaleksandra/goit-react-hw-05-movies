{"version":3,"file":"static/js/84.03bd2c5e.chunk.js","mappings":"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","sources":["components/TMDB-Api/FetchMovies.js","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","webpack://react-homework-template/./src/components/Input/Input.module.css?1f33","components/Input/Input.js","webpack://react-homework-template/./src/components/ButtonLoadMore/ButtonLoadMore.module.css?65fe","components/ButtonLoadMore/ButtonLoadMore.js","pages/Movies/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey = '9d7a39f8c7043e83eaf145d46d730826';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`\n  );\n\n  return response.data.results;\n};\n\nexport const fetchSearch = async (searchQuery, pageNumber) => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${searchQuery}&page=${pageNumber}&include_adult=false`\n  );\n\n  return response.data.results;\n};\n\nexport const fetchDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n  );\n\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n  );\n\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieLink\":\"Movies_movieLink__ERyJ6\"};","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__E5rzA\",\"btnSearch\":\"Input_btnSearch__nQRYr\"};","import React from 'react';\n\nimport clsx from 'clsx';\nimport css from '../Input/Input.module.css';\n\nexport const Input = ({ onSubmit }) => {\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const searchQuery = form.elements.search.value;\n    form.reset();\n    onSubmit(searchQuery);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"search\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        className={clsx(css.input)}\n      />\n      <button type=\"submit\" className={clsx(css.btnSearch)}>\n        Search\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btnLoad\":\"ButtonLoadMore_btnLoad__OzeZ4\"};","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport clsx from 'clsx';\nimport css from '../ButtonLoadMore/ButtonLoadMore.module.css';\n\nexport const ButtonLoadMore = ({ onClick }) => (\n  <button onClick={onClick} className={clsx(css.btnLoad)}>\n    Load more\n  </button>\n);\n\nButtonLoadMore.propTypes = {\n  onClick: PropTypes.func,\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nimport clsx from 'clsx';\nimport css from '../Movies/Movies.module.css';\n\nimport { fetchSearch } from '../../components/TMDB-Api/FetchMovies';\nimport { Input } from 'components/Input/Input';\nimport { ButtonLoadMore } from '../../components/ButtonLoadMore/ButtonLoadMore';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const location = useLocation();\n\n  // const [searchQuery, setSearchQuery] = useState('');\n  const [searchMoviesData, setSearchMoviesData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n\n  // obsługa wyszukiwania filmów na stronie movies\n  const handleSubmit = searchQuery => {\n    setSearchParams({ query: searchQuery });\n  };\n\n  useEffect(() => {\n    if (searchQuery === null) {\n      return;\n    }\n\n    const handleSearchMovie = async () => {\n      setIsLoading(true);\n      setPageNumber(1);\n\n      try {\n        const movies = await fetchSearch(searchQuery, 1);\n        setSearchMoviesData(movies);\n      } catch (err) {\n        console.error(err);\n      } finally {\n        setIsLoading(false);\n        setPageNumber(p => p + 1);\n      }\n    };\n\n    handleSearchMovie();\n  }, [searchQuery]);\n\n  // obsługa load more na movies page\n  const handleLoadMore = async () => {\n    setIsLoading(true);\n\n    try {\n      const nextMovies = await fetchSearch(searchQuery, pageNumber);\n      setSearchMoviesData(searchMoviesData.concat(nextMovies));\n    } catch (err) {\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n      setPageNumber(pageNumber + 1);\n    }\n  };\n\n  return (\n    <>\n      <Input onSubmit={handleSubmit} />\n      <ul>\n        {searchMoviesData.map(movie => (\n          <li key={movie.id}>\n            <Link\n              id={movie.id}\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n              className={clsx(css.movieLink)}\n            >\n              {movie.original_title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      {isLoading && <Loader />}\n      {searchMoviesData.length > 0 && (\n        <ButtonLoadMore onClick={handleLoadMore} />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["apiKey","fetchTrending","axios","response","data","results","fetchSearch","searchQuery","pageNumber","fetchDetails","movieId","fetchCast","cast","fetchReviews","Input","onSubmit","evt","preventDefault","form","currentTarget","elements","search","value","reset","type","name","autoComplete","autoFocus","placeholder","className","clsx","css","ButtonLoadMore","onClick","location","useLocation","useState","searchMoviesData","setSearchMoviesData","isLoading","setIsLoading","setPageNumber","useSearchParams","searchParams","setSearchParams","get","useEffect","handleSearchMovie","movies","console","error","p","handleLoadMore","nextMovies","concat","query","map","movie","id","to","state","from","original_title","Loader","length"],"sourceRoot":""}