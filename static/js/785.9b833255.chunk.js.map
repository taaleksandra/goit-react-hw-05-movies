{"version":3,"file":"static/js/785.9b833255.chunk.js","mappings":"kOAmDA,UA7CgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAqBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,2FACpBJ,GAAa,GACbF,EAAW,IAFS,mBAKSO,EAAAA,EAAAA,IAAaJ,GALtB,OAKZK,EALY,OAMlBR,EAAWQ,GANO,gDAQlBC,QAAQC,MAAR,MARkB,yBAUlBR,GAAa,GAVK,4EAAH,qDAcnBI,GACD,GAAE,CAACH,KAGF,4BACE,qCACA,wBACsB,IAAnBJ,EAAQY,QACP,+CAEAZ,EAAQa,KAAI,SAAAC,GAAM,OAChB,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GADA,MAQrBf,IAAa,SAAC,IAAD,MAGnB,C,8LC/CKgB,EAAS,mCAEFC,EAAa,mCAAG,oGACJC,EAAAA,EAAAA,IAAA,kEACsCF,IAFlC,cACrBG,EADqB,yBAKpBA,EAASC,KAAKC,SALM,2CAAH,qDAQbC,EAAW,mCAAG,WAAOC,EAAaC,GAApB,uFACFN,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,iCAC+DO,EAD/D,iBACmFC,EADnF,yBADE,cACnBL,EADmB,yBAKlBA,EAASC,KAAKC,SALI,2CAAH,wDAQXI,EAAY,mCAAG,WAAMvB,GAAN,uFACHgB,EAAAA,EAAAA,IAAA,6CACiBhB,EADjB,oBACoCc,EADpC,oBADG,cACpBG,EADoB,yBAKnBA,EAASC,MALU,2CAAH,sDAQZM,EAAS,mCAAG,WAAMxB,GAAN,uFACAgB,EAAAA,EAAAA,IAAA,6CACiBhB,EADjB,4BAC4Cc,EAD5C,oBADA,cACjBG,EADiB,yBAKhBA,EAASC,KAAKO,MALE,2CAAH,sDAQTrB,EAAY,mCAAG,WAAMJ,GAAN,uFACHgB,EAAAA,EAAAA,IAAA,6CACiBhB,EADjB,4BAC4Cc,EAD5C,oBADG,cACpBG,EADoB,yBAKnBA,EAASC,KAAKC,SALK,2CAAH,qD","sources":["components/Reviews/Reviews.js","components/TMDB-Api/FetchMovies.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchReviews } from 'components/TMDB-Api/FetchMovies';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  // obsÅ‚uga zapytania o reviews filmu\n  useEffect(() => {\n    const handleReviews = async () => {\n      setIsLoading(true);\n      setReviews([]);\n\n      try {\n        const movieReviews = await fetchReviews(movieId);\n        setReviews(movieReviews);\n      } catch (err) {\n        console.error(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    handleReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h3>Reviews</h3>\n      <ul>\n        {reviews.length === 0 ? (\n          <p>There is no reviews</p>\n        ) : (\n          reviews.map(review => (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))\n        )}\n      </ul>\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst apiKey = '9d7a39f8c7043e83eaf145d46d730826';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${apiKey}`\n  );\n\n  return response.data.results;\n};\n\nexport const fetchSearch = async (searchQuery, pageNumber) => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${searchQuery}&page=${pageNumber}&include_adult=false`\n  );\n\n  return response.data.results;\n};\n\nexport const fetchDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const fetchCast = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n  );\n\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n  );\n\n  return response.data.results;\n};\n"],"names":["useState","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","useEffect","handleReviews","fetchReviews","movieReviews","console","error","length","map","review","author","content","id","apiKey","fetchTrending","axios","response","data","results","fetchSearch","searchQuery","pageNumber","fetchDetails","fetchCast","cast"],"sourceRoot":""}